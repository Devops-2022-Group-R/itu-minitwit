apiVersion: apps/v1
kind: Deployment
metadata:
  name: itu-minitwit-monitoring-grafana
  namespace: itu-minitwit-monitoring-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: itu-minitwit-monitoring-grafana
  minReadySeconds: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: itu-minitwit-monitoring-grafana
    spec:
      nodeSelector:
        "beta.kubernetes.io/os": linux
      containers:
      - name: itu-minitwit-monitoring-grafana
        image: kongborup/itu-minitwit-monitoring-grafana
        env:
        - name: PROMETHEUS_HOST
          value: "itu-minitwit-monitoring-prometheus"
        ports:
        - containerPort: 3000
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 2
          successThreshold: 1
---
apiVersion: v1
kind: Service
metadata:
  name: itu-minitwit-monitoring-grafana
  namespace: itu-minitwit-monitoring-ns
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 3000
  selector:
    app: itu-minitwit-monitoring-grafana
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: itu-minitwit-monitoring-grafana
  namespace: itu-minitwit-monitoring-ns
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
  - hosts:
    - monitoring.rhododevdron.dk
    secretName: tls-secret-grafana
  - hosts:
    - monitoring.rhododevdron.swuwu.dk
    secretName: tls-secret-grafana-swuwu
  rules:
  - host: monitoring.rhododevdron.dk 
    http: &http_rules
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: itu-minitwit-monitoring-grafana
            port:
              number: 80
  - host: monitoring.rhododevdron.swuwu.dk
    http: *http_rules